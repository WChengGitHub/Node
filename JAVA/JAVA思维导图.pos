{"diagram":{"image":{"height":200,"pngdata":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAsUlEQVR4nO3BAQEAAACCIP+vbkhAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8GXHmAAFMgHIEAAAAAElFTkSuQmCC","width":200,"y":0,"x":0},"elements":{"id":"root","title":"java","leftChildren":[{"id":"788852e37325","title":"对象","children":[],"parent":"root"},{"id":"8a1dabfff9cc","title":"类","parent":"root","children":[]},{"id":"6720a3f601c8","title":"数组","parent":"root","children":[]},{"id":"7ea127fa9059","title":"I/O系统","parent":"root","children":[]},{"id":"36f1f275f0a7","title":"并发","parent":"root","children":[]},{"id":"e28a2717ba1a","title":"泛型","parent":"root","children":[]},{"id":"c9d3c9e08ac2","title":"接口","parent":"root","children":[]}],"structure":"mind_free","root":true,"theme":"paper","children":[{"id":"a9cc294390de","title":"多态","parent":"root","children":[{"id":"0750f8ecabd3","title":"定义","parent":"a9cc294390de","children":[{"id":"6130616d0f9e","title":"对于父类发出的消息，不同的子类有不同的响应","parent":"0750f8ecabd3","children":[]}],"collapsed":false},{"id":"476b94652b69","title":"实现","parent":"a9cc294390de","children":[{"id":"e4597f226f6d","title":"基于继承方式实现","parent":"476b94652b69","children":[{"id":"ea647ff0dd7b","title":"子类重写父类继承的方法，子类向上转型为父类引用，父类引用就可以调用子类重写的方法","parent":"e4597f226f6d","children":[]}]},{"id":"aa0cf2964f59","title":"基于接口方式实现","parent":"476b94652b69","children":[{"id":"0d7815a87434","title":"类实现接口，类向上转型为接口类型，接口类型就可以调用被实现的方法","parent":"aa0cf2964f59","children":[]}]}],"collapsed":false}]},{"id":"8353f540dc2c","title":"封装","parent":"root","children":[{"id":"fe13be26158b","title":"定义","parent":"8353f540dc2c","children":[{"id":"f4b4fa37757c","title":"对类的数据和方法进行限制，外部类不能随随便便得使用，需要使用定义类提供的外部接口","parent":"fe13be26158b","children":[]}]},{"id":"dadc2af068d2","title":"作用","children":[{"id":"63272b2120c0","title":"类的开发者可以很方便得修改自己的类，只要不改变外部接口的参数就不需要修改使用该类的客户端代码","parent":"dadc2af068d2","children":[]}],"parent":"8353f540dc2c"},{"id":"49872cd54025","title":"实现","children":[{"id":"7b07d01070a6","title":"根据需要把类的属性或方法定义为private,protect类型，把外部接口定义为public类型供外部使用","children":[{"id":"092e848eeaa8","title":"private","parent":"7b07d01070a6","children":[{"id":"c6cf76f5b701","title":"只有在定义类内才能使用","parent":"092e848eeaa8","children":[]}]},{"id":"88f5cae71627","title":"protected","children":[{"id":"dfc64dcc2bb9","title":"可以在本类，子类，同一个package的类使用，不同的package类不能使用","parent":"88f5cae71627","children":[]}],"parent":"7b07d01070a6"},{"id":"c60179408581","title":"public","children":[{"id":"b6ebb98fa1bf","title":"可以在任意地方使用","parent":"c60179408581","children":[]}],"parent":"7b07d01070a6"}],"parent":"49872cd54025"}],"parent":"8353f540dc2c"}]},{"id":"69bd992586ec","title":"继承","parent":"root","children":[{"id":"5399df2206fe","title":"定义","children":[{"id":"1f82e6d90aa7","title":"一个类继承了父类中所有的方法和属性","children":[],"parent":"5399df2206fe"}],"parent":"69bd992586ec"},{"id":"fdd304d975ee","title":"作用","parent":"69bd992586ec","children":[{"id":"e74b646a4fbe","title":"实现代码复用，父类抽取子类中共有的方法和属性","parent":"fdd304d975ee","children":[]}]},{"id":"722678602f0d","title":"实现","parent":"69bd992586ec","children":[{"id":"90879c047664","title":"使用extends关键字","parent":"722678602f0d","children":[]},{"id":"b3023bfbd884","title":"子类根据需要重写父类的方法或者添加新的属性或方法","parent":"722678602f0d","children":[]}]},{"id":"c163cbecb401","title":"缺点","children":[{"id":"51581cd67323","title":"父类变，子类一定变","children":[],"parent":"c163cbecb401"},{"id":"e850bf85813b","title":"破坏了封装，父类的属性或方法对子类可见","parent":"c163cbecb401","children":[]},{"id":"149458cd5e84","title":"继承是一种强耦合关系","parent":"c163cbecb401","children":[]}],"parent":"69bd992586ec"},{"id":"f367fb5806d0","title":"使用建议","children":[{"id":"829f4eadcf6d","title":"如果子类需要向上转型为父类，就一定得用继承","children":[],"parent":"f367fb5806d0"},{"id":"c9d67fd885f0","title":"尽量少用继承","children":[],"parent":"f367fb5806d0"},{"id":"011f76ab137b","title":"如果只是为了代码复用，尽量不要用继承","children":[],"parent":"f367fb5806d0"}],"parent":"69bd992586ec"}]},{"id":"58a723a419fc","title":"接口","parent":"root","children":[{"id":"154d5ae1530d","title":"定义","children":[{"id":"51f5dc9ff68e","title":"接口是一种比抽象类更抽象的类，没有具体实现","children":[],"parent":"154d5ae1530d"},{"id":"1f5eb2cd0a53","title":"接口定义了类与类的协议，任何实现该接口的类都像这样","children":[],"parent":"154d5ae1530d"}],"parent":"58a723a419fc"},{"id":"a9261438eb1d","title":"作用","children":[{"id":"d6b1265e9cb4","title":"java中没有多重继承，可以用接口来实现类似多层继承的特性","children":[],"parent":"a9261438eb1d"},{"id":"781181cdd7d7","title":"把接口当成参数，任何实现该接口的类都可以当成该接口的参数","children":[],"parent":"a9261438eb1d"}],"parent":"58a723a419fc"},{"id":"e28348b96302","title":"实现","children":[{"id":"8c5643d8fc25","title":"使用implements关键字","children":[],"parent":"e28348b96302"},{"id":"9642e16b7803","title":"根据需要重写方法","children":[],"parent":"e28348b96302"}],"parent":"58a723a419fc"},{"id":"16b5b12899fe","title":"建议","children":[{"id":"fb78910127d2","title":"优先选择类而不是接口","children":[],"parent":"16b5b12899fe"},{"id":"7a4be9b56f48","title":"接口是一种重要工具，但是它们容易被滥用","children":[],"parent":"16b5b12899fe"}],"parent":"58a723a419fc"}]},{"id":"1974991fe221","title":"容器","parent":"root","children":[]},{"id":"ad7d78b6b4a4","title":"字符串","parent":"root","children":[]}],"lines":{}}},"meta":{"id":"5aa33727e4b0fb5a6bef100a","member":"587a097ae4b098bf4ca2ed8f","exportTime":"2018-03-14 15:58:11","diagramInfo":{"category":"mind_free","title":"JAVA","created":"2018-03-10 09:38:47","creator":"587a097ae4b098bf4ca2ed8f","modified":"2018-03-14 15:57:17"},"type":"ProcessOn Schema File","version":"1.0"}}