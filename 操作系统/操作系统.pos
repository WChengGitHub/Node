{"diagram":{"image":{"height":200,"pngdata":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAsUlEQVR4nO3BAQEAAACCIP+vbkhAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8GXHmAAFMgHIEAAAAAElFTkSuQmCC","width":200,"y":0,"x":0},"elements":{"id":"root","structure":"mind_free","leftChildren":[{"id":"77a368e05cee","title":"线程","parent":"root","children":[{"id":"06bd235bf4b9","title":"背景","children":[{"id":"eff5556e1fa1","title":"进程在创建、撤销和切换中消耗的代价比较大","children":[],"parent":"06bd235bf4b9"}],"parent":"77a368e05cee"},{"id":"bdb67e30ca93","title":"定义","children":[{"id":"70382317d468","title":"线程作为调度和分配的基本单位，而进程作为拥有资源的基本单位","children":[],"parent":"bdb67e30ca93"},{"id":"72272f1c89f3","title":"TCP是线程控制块，记录线程的基本情况","children":[],"parent":"bdb67e30ca93"}],"parent":"77a368e05cee"}],"collapsed":false},{"id":"0337d91b782b","title":"存储器管理","parent":"root","children":[{"id":"7aea29c281eb","title":"存储器的层次结构","children":[{"id":"6da031e83a8c","title":"CPU寄存器","children":[],"parent":"7aea29c281eb"},{"id":"49456be806cd","title":"主存","children":[{"id":"152defb0ee06","title":"高速缓存","children":[{"id":"b6b54672911d","title":"减少CPU对主存区的访问次数","children":[],"parent":"152defb0ee06"}],"parent":"49456be806cd"},{"id":"07d400a7280e","title":"主存储器","children":[],"parent":"49456be806cd"},{"id":"f489fbb97313","title":"磁盘缓存","children":[{"id":"d4458beb442e","title":"缓和CPU对主存的访问速度和磁盘的I/O速度不匹配的问题","children":[],"parent":"f489fbb97313"}],"parent":"49456be806cd"}],"parent":"7aea29c281eb"},{"id":"53747f6a253e","title":"铺存","children":[{"id":"62a057293df9","title":"固定磁盘","children":[],"parent":"53747f6a253e"},{"id":"ab87ff811b6a","title":"可移动存储介质","children":[],"parent":"53747f6a253e"}],"parent":"7aea29c281eb"}],"parent":"0337d91b782b","collapsed":false},{"id":"97b105397850","title":"连续分配存储管理方式","parent":"0337d91b782b","children":[{"id":"2437ba8139ee","title":"单一连续分配","parent":"97b105397850","children":[{"id":"e0ba7327f01f","title":"用户区内存只有一道用户程序","parent":"2437ba8139ee","children":[]}]},{"id":"bee81c03d96c","title":"固定分期分配","parent":"97b105397850","children":[{"id":"229a641db86a","title":"分区大小相等","parent":"bee81c03d96c","children":[]},{"id":"7284654a9176","title":"分区大小不相等","parent":"bee81c03d96c","children":[]}]},{"id":"d224f62d6bb4","title":"动态分区分配","parent":"97b105397850","children":[{"id":"4a51ef58b294","title":"算法","parent":"d224f62d6bb4","children":[{"id":"2838af36efe8","title":"首次适应算法","parent":"4a51ef58b294","children":[]},{"id":"ada66a8ae0bf","title":"循环首次适应算法","parent":"4a51ef58b294","children":[]},{"id":"ec5108fa9422","title":"最佳适应算法","parent":"4a51ef58b294","children":[{"id":"1f7de0bf9602","title":"容易产生碎片","parent":"ec5108fa9422","children":[]}]},{"id":"f9d32fd54d9a","title":"最坏适应算法","parent":"4a51ef58b294","children":[{"id":"e95d446d0266","title":"缺乏大分区","parent":"f9d32fd54d9a","children":[]}]},{"id":"5326fc816af5","title":"紧凑","parent":"4a51ef58b294","children":[]}]}]}],"collapsed":false},{"id":"099e4bbfb15c","title":"对换","parent":"0337d91b782b","children":[{"id":"678d15e8b26a","title":"把暂时不能运行的进程或者程序和数据放到外存","parent":"099e4bbfb15c","children":[]}],"collapsed":false},{"id":"5fe071b2fc80","title":"分页存储管理方式","parent":"0337d91b782b","children":[{"id":"63ed4376431f","title":"核心概念","parent":"5fe071b2fc80","children":[{"id":"b60798f60840","title":"页面","parent":"63ed4376431f","children":[{"id":"c36b21ed3c65","title":"把进程的逻辑空间分成若干列，为每一列分配一个物理块","parent":"b60798f60840","children":[]}]},{"id":"2940caac877e","title":"地址结构","parent":"63ed4376431f","children":[{"id":"e1062daa93f7","title":"页号+位偏移量","parent":"2940caac877e","children":[]}]},{"id":"1507968f2f7d","title":"页面","parent":"63ed4376431f","children":[{"id":"5f9d1802ebcc","title":"记录着页号和块号的对应关系","parent":"1507968f2f7d","children":[]}]},{"id":"b0d8d6a9e584","title":"快表","parent":"63ed4376431f","children":[{"id":"9e576749cdfe","title":"存储着当前访问的页号","parent":"b0d8d6a9e584","children":[]},{"id":"a696063301ad","title":"背景","parent":"b0d8d6a9e584","children":[{"id":"bd250640da7e","title":"cpu获取数据时需要两次访问内存，第一次是访问页表得到物理地址，第二次从地址中取数据","parent":"a696063301ad","children":[]}]}]}]}],"collapsed":false},{"id":"de8f5355ea3b","title":"分段存储管理方式","parent":"0337d91b782b","children":[{"id":"934c808da585","title":"背景","parent":"de8f5355ea3b","children":[{"id":"1ecdb6eca9cf","title":"用户一般把自己的作业按照逻辑关系若干段","parent":"934c808da585","children":[]},{"id":"074ece1ce09c","title":"信息共享","parent":"934c808da585","children":[{"id":"979fbdb1228a","title":"居于分页式的共享，共享的数据可能跨数十个页面","parent":"074ece1ce09c","children":[]}]},{"id":"ed943fc6300c","title":"信息包含","parent":"934c808da585","children":[]}]},{"id":"b8f6eb459588","title":"核心概念","parent":"de8f5355ea3b","children":[{"id":"ba8fc96b90a1","title":"分段地址","parent":"b8f6eb459588","children":[{"id":"1254ab957832","title":"段号+段内地址","parent":"ba8fc96b90a1","children":[]}]},{"id":"29d382563562","title":"段表","parent":"b8f6eb459588","children":[{"id":"43510b3d7c5f","title":"段号+段长+段基址","parent":"29d382563562","children":[]}]}]},{"id":"498b02b47a52","title":"定义","parent":"de8f5355ea3b","children":[{"id":"085b86971955","title":"把作业按照逻辑关系按照逻辑关系划分成若干段","parent":"498b02b47a52","children":[]}]}],"collapsed":false},{"id":"1bada408a310","title":"段页式管理方式","parent":"0337d91b782b","children":[{"id":"9eb3dde34f8c","title":"定义","parent":"1bada408a310","children":[{"id":"e38706312df3","title":"按照逻辑关系把作业分段，段内分页","parent":"9eb3dde34f8c","children":[]}]},{"id":"4e6fa0a6f975","title":"背景","parent":"1bada408a310","children":[{"id":"8403b62aac46","title":"分段管理方式需要连续的存储空间","parent":"4e6fa0a6f975","children":[]}]}],"collapsed":false}],"collapsed":false},{"id":"c7f6b557377e","title":"输入输出系统","parent":"root","children":[{"id":"93da183f07e3","title":"I/O系统接口","parent":"c7f6b557377e","children":[{"id":"10ae712e438b","title":"块设备接口","parent":"93da183f07e3","children":[{"id":"d3188bdb5be9","title":"核心概念","parent":"10ae712e438b","children":[{"id":"28cd6cdd3ade","title":"块设备","parent":"d3188bdb5be9","children":[{"id":"e3cab1ba95e7","title":"数据的存取和传输都与数据块为单位","parent":"28cd6cdd3ade","children":[]}]}]},{"id":"a7d0d2e9a1b7","title":"功能","parent":"10ae712e438b","children":[{"id":"35038e5aea43","title":"将抽象命令映射为底层操作","parent":"a7d0d2e9a1b7","children":[]}]}]},{"id":"b55aee66d81c","title":"流设备接口","parent":"93da183f07e3","children":[{"id":"6e135cdc89a1","title":"核心概念","parent":"b55aee66d81c","children":[{"id":"5fc3c5ebe759","title":"字符设备","parent":"6e135cdc89a1","children":[{"id":"b670467aecc0","title":"数据的传输都与字符为单位，例如键盘","parent":"5fc3c5ebe759","children":[]}]}]},{"id":"53096c8ac90e","title":"功能","children":[{"id":"8cb1c1ed7c01","title":"控制字符设备的输入输出","children":[],"parent":"53096c8ac90e"}],"parent":"b55aee66d81c"}]},{"id":"088c755cf68c","title":"网络通信接口","parent":"93da183f07e3","children":[]}]},{"id":"de48a55754dc","title":"设备独立性软件","parent":"c7f6b557377e","children":[{"id":"7355295fbd29","title":"错误报告","children":[],"parent":"de48a55754dc"},{"id":"ec046f99e5f5","title":"设备驱动程序的统一入口","children":[],"parent":"de48a55754dc"},{"id":"be43ff355981","title":"分配与释放专用设备","children":[{"id":"5484a6fa6a04","title":"设备控制表（DCT）","children":[{"id":"70107327bf18","title":"记录设备的情况","children":[],"parent":"5484a6fa6a04"}],"parent":"be43ff355981"}],"parent":"de48a55754dc"},{"id":"122b18e5d40a","title":"提供与设备无关的块大小","children":[],"parent":"de48a55754dc"},{"id":"bbf026f80075","title":"缓冲","children":[],"parent":"de48a55754dc"},{"id":"812c32adf9c2","title":"实现逻辑名到物理设备名映射的实现","children":[],"parent":"de48a55754dc"}]},{"id":"6ce943901505","title":"设备驱动程序","parent":"c7f6b557377e","children":[{"id":"a9186a8f2942","title":"接受设备独立性软件发过来的抽象命令，转换为具体请求再发给设备管理器","children":[],"parent":"6ce943901505"}]},{"id":"447d7d3dbebb","title":"中断处理程序","parent":"c7f6b557377e","children":[{"id":"e5e0c01e09f1","title":"步骤","children":[{"id":"74cd5635d2cb","title":"测定是否有响应信号","children":[],"parent":"e5e0c01e09f1"},{"id":"8337e17e1b8c","title":"保留正在运行进程的CPU环境","children":[],"parent":"e5e0c01e09f1"},{"id":"2828e43d2a19","title":"转入相应的设备处理程序，转到中断处理子程序","children":[],"parent":"e5e0c01e09f1"},{"id":"7999f5d2bc8c","title":"中断处理","parent":"e5e0c01e09f1","children":[]},{"id":"972ff1046445","title":"恢复CPU现场并退出中断","parent":"e5e0c01e09f1","children":[]}],"parent":"447d7d3dbebb"}]},{"id":"ca3dc9840162","title":"RW/HW接口","parent":"c7f6b557377e","children":[]},{"id":"ed7e9a2cfaae","title":"设备控制器","parent":"c7f6b557377e","children":[{"id":"54802982039b","title":"控制I/O设备和CPU交换数据，减少CPU负担","children":[],"parent":"ed7e9a2cfaae"},{"id":"f355dfed1240","title":"数据缓冲区","children":[{"id":"944a887c3fc0","title":"暂存I/O发来的数据，等收到一批数据后，再一起发给CPU","children":[],"parent":"f355dfed1240"}],"parent":"ed7e9a2cfaae"}]}],"collapsed":false},{"id":"f1df513432fd","title":"磁盘管理","parent":"root","children":[]}],"title":"操作系统","root":true,"theme":"paper","children":[{"id":"4b198bfdc4ce","title":"进程","parent":"root","children":[{"id":"f1b72e1f02b7","title":"定义","parent":"4b198bfdc4ce","children":[{"id":"b0999f2220b8","title":"进程是由程序段、数据段、PCB组成","parent":"f1b72e1f02b7","children":[]},{"id":"28b10aef3830","title":"PCB是是一种数据结构，存储着进程标志符、处理机状态、进程调度的信息、进程的控制信息","children":[],"parent":"f1b72e1f02b7"},{"id":"e73eca91609f","title":"进程是资源和独立调度的基本单位","children":[],"parent":"f1b72e1f02b7"}]},{"id":"f8ba6662b0f0","title":"状态","parent":"4b198bfdc4ce","children":[{"id":"6f5732eeff5e","title":"就绪","parent":"f8ba6662b0f0","children":[{"id":"2fb152d2b74b","title":"进程分配到除了CPU之外的所有资源","parent":"6f5732eeff5e","children":[]}]},{"id":"15a1fc4e1ffa","title":"阻塞","parent":"f8ba6662b0f0","children":[{"id":"131021f8ef2b","title":"正在执行的进程由于一些原因无法继续执行","parent":"15a1fc4e1ffa","children":[]}]},{"id":"58df1a0e710b","title":"执行","parent":"f8ba6662b0f0","children":[{"id":"7f6156d7dcd2","title":"就绪转态的进程获得CPU","parent":"58df1a0e710b","children":[]}]},{"id":"61aa377863c2","title":"转态转换","children":[{"id":"0b26668d2a2d","title":"执行状态的进程的时间片走完之后就进入就绪转态","children":[],"parent":"61aa377863c2"},{"id":"9229bea27c7e","title":"阻塞转态的进程在阻塞事件消失后就进入就绪状态","children":[],"parent":"61aa377863c2"}],"parent":"f8ba6662b0f0"}]},{"id":"70a6ca91502f","title":"进程同步","parent":"4b198bfdc4ce","children":[{"id":"9d4317f826b5","title":"核心概念","parent":"70a6ca91502f","children":[{"id":"6e0e3d288c56","title":"临界资源","parent":"9d4317f826b5","children":[{"id":"10f6170df87d","title":"硬件资源例如打印机","parent":"6e0e3d288c56","children":[]}]},{"id":"292bf9e707ad","title":"临界区","parent":"9d4317f826b5","children":[{"id":"010ec08f9474","title":"访问临界资源的代码","parent":"292bf9e707ad","children":[]}]},{"id":"038c701c2ae7","title":"进入区","parent":"9d4317f826b5","children":[{"id":"496e9bac8791","title":"在临界区前用于检查临界资源的代码","parent":"038c701c2ae7","children":[]}]},{"id":"25059aca40db","title":"退出区","parent":"9d4317f826b5","children":[{"id":"c6af4a80597b","title":"恢复进入区代码的修改","children":[],"parent":"25059aca40db"}]}]},{"id":"29ddb104d923","title":"同步机制","children":[{"id":"06837a35459e","title":"硬件同步机制","children":[{"id":"5505f1554e10","title":"关中断","children":[{"id":"4ec139365e48","title":"进程在临界区执行时，系统不响应中段","children":[],"parent":"5505f1554e10"}],"parent":"06837a35459e"}],"parent":"29ddb104d923"},{"id":"4c5f09bec01a","title":"信号量同步机制","children":[{"id":"44824e243a28","title":"记录型信号量","children":[{"id":"f9d7953f2534","title":"实现","parent":"44824e243a28","children":[{"id":"4d1700b80a85","title":"数据结构记录资源数目、和等待的进程链表","parent":"f9d7953f2534","children":[]},{"id":"8259963d2be7","title":"等待函数","children":[{"id":"73fc0f40d65e","title":"先让资源数目减1，如果数目&lt;0，就把该进程放进等待列表","children":[],"parent":"8259963d2be7"}],"parent":"f9d7953f2534"},{"id":"4a28d0c3a9a1","title":"唤醒函数","children":[{"id":"5cce8b0db8a3","title":"先让资源数目+1，如果数目&lt;=0,就从等待队列中唤醒一个进程","children":[],"parent":"4a28d0c3a9a1"}],"parent":"f9d7953f2534"}]},{"id":"2c3bad7f30dd","title":"应用场景","children":[{"id":"2e8341371334","title":"生产者-消费者问题","children":[],"parent":"2c3bad7f30dd"}],"parent":"44824e243a28"}],"parent":"4c5f09bec01a"}],"parent":"29ddb104d923"},{"id":"d13db7f62bb8","title":"规则","children":[{"id":"f960dc9d7385","title":"空闲让进","children":[],"parent":"d13db7f62bb8"},{"id":"b34523845cd5","title":"满则等待","children":[],"parent":"d13db7f62bb8"},{"id":"cb79c4fff822","title":"有限等待","children":[],"parent":"d13db7f62bb8"},{"id":"35d0461e06be","title":"让权等待","children":[{"id":"5c00ee4fda96","title":"进程不能进入临界区后，应立即释放CPU","children":[],"parent":"35d0461e06be"}],"parent":"d13db7f62bb8"}],"parent":"29ddb104d923"}],"parent":"70a6ca91502f"}]},{"id":"133d22a8ecc2","title":"进程通信","children":[{"id":"6717c2bae906","title":"共享存储区通信方式","children":[{"id":"11d668ad5a7c","title":"在内存中划出一块区域，诸进程可以通过该存储区交互数据","children":[],"parent":"6717c2bae906"}],"parent":"133d22a8ecc2"},{"id":"bcc50a01f68e","title":"管道通信方式","parent":"133d22a8ecc2","children":[{"id":"1ca1c89b30ec","title":"读进程和写进程通过一个共享文件进行数据交换","parent":"bcc50a01f68e","children":[]}]},{"id":"9d1f10e8d63c","title":"消息传递系统","parent":"133d22a8ecc2","children":[{"id":"f1da190dd3a5","title":"进程把数据封装在消息中，通过OS提供的通信命令进行进程之间的通信，比如网络中的报文","parent":"9d1f10e8d63c","children":[]}]},{"id":"06097adbabcd","title":"客户机-服务器系统","children":[{"id":"9e7608987246","title":"进程通过网络协议交换信息","children":[],"parent":"06097adbabcd"}],"parent":"133d22a8ecc2"}],"parent":"4b198bfdc4ce"}],"collapsed":false},{"id":"9aafba07bba7","title":"处理机调度","parent":"root","children":[{"id":"08dd641b4c91","title":"高级调度（作业调度）","parent":"9aafba07bba7","children":[{"id":"07f0666b7cb9","title":"定义","parent":"08dd641b4c91","children":[{"id":"05739f2568c6","title":"调度的对象是作业，根据调度算法把作业调到内存","children":[],"parent":"07f0666b7cb9"}]},{"id":"26338ff1d35b","title":"核心概念","children":[{"id":"9462cd281a3e","title":"作业","children":[{"id":"9c638707540f","title":"包含程序、数据和作业说明书","children":[],"parent":"9462cd281a3e"}],"parent":"26338ff1d35b"},{"id":"fd260003222b","title":"作业步","children":[{"id":"ce3ffee5a7fa","title":"对作业进行加工的步骤","children":[],"parent":"fd260003222b"}],"parent":"26338ff1d35b"},{"id":"e87888c911df","title":"作业控制块（JCB）","children":[{"id":"680a5648aec8","title":"保存着系统对作业进行管理和调度的全部信息","children":[],"parent":"e87888c911df"}],"parent":"26338ff1d35b"},{"id":"280655b39e81","title":"三个阶段和三个状态","parent":"26338ff1d35b","children":[{"id":"a8698ca71b25","title":"收容阶段","parent":"280655b39e81","children":[{"id":"12b04e4c627c","title":"为作业建立JCB,放入作业后备队列，此时就是“后备状态”","parent":"a8698ca71b25","children":[]}]},{"id":"ae92b70e8406","title":"运行阶段","parent":"280655b39e81","children":[{"id":"91ec947c2af2","title":"为作业分配资源和建立进程，把作业放入就绪队列，直到运行结束（运行状态）","parent":"ae92b70e8406","children":[]}]},{"id":"b8fc1889028a","title":"完成阶段","parent":"280655b39e81","children":[{"id":"1b1a59f593c0","title":"系统回收JCB和资源","parent":"b8fc1889028a","children":[]}]}]}],"parent":"08dd641b4c91"},{"id":"3211cbd19e9a","title":"调度的算法","parent":"08dd641b4c91","children":[{"id":"63f4f5e1d387","title":"先来先服务（FCFS）","parent":"3211cbd19e9a","children":[]},{"id":"48f22a690345","title":"短作业优先（SJF）","parent":"3211cbd19e9a","children":[]},{"id":"a1c416f0282f","title":"优先级调度算法","parent":"3211cbd19e9a","children":[]},{"id":"fd6690ea57e1","title":"高响应比调度算法","parent":"3211cbd19e9a","children":[{"id":"e2c38aeb625f","title":"优先权=（等待时间+要求服务时间）/要求服务时间","parent":"fd6690ea57e1","children":[]}]}]}],"collapsed":false},{"id":"d891d6ddca7b","title":"中级调度","parent":"9aafba07bba7","children":[{"id":"c7c5faa020e7","title":"定义","parent":"d891d6ddca7b","children":[{"id":"e8517acefb3f","title":"调度的对象是进程，把暂时不能运行的进程放到外存，等条件成熟后又把调出去的进程调入内存","parent":"c7c5faa020e7","children":[]}]}]},{"id":"8894ce5d6b10","title":"低级调度（进程调度）","parent":"9aafba07bba7","children":[{"id":"bbf98a84f7fe","title":"定义","parent":"8894ce5d6b10","children":[{"id":"17ca5d8bbcdc","title":"调度的对象是进程，根据某种算法给从就绪队列中进程分配CPU","parent":"bbf98a84f7fe","children":[]}]},{"id":"a1095d0ab3f7","title":"算法","parent":"8894ce5d6b10","children":[{"id":"fd438ef31b76","title":"轮转调度算法","parent":"a1095d0ab3f7","children":[{"id":"739832a299a5","title":"就绪队列的进程每次都运行一个时间片","parent":"fd438ef31b76","children":[]},{"id":"3a0296602bc4","title":"时间片的大小影响效率","parent":"fd438ef31b76","children":[]}]},{"id":"90c69f491ea7","title":"优先级调度算法","parent":"a1095d0ab3f7","children":[]},{"id":"5c6eb1616eb8","title":"多级反馈队列调度算法","parent":"a1095d0ab3f7","children":[{"id":"20896769297b","title":"设置多个就绪队列，第一个队列优先级最高，其余队列的优先级依次降低，优先级越高的队列时间片越短","parent":"5c6eb1616eb8","children":[]},{"id":"9ff613488ad3","title":"每个队列采用FCFS算法，如果进程在当前队列不能执行完，就把该进程放到下一个队列的末尾","parent":"5c6eb1616eb8","children":[]},{"id":"c04a67b2c5b2","title":"队列优先级越高，越先执行","parent":"5c6eb1616eb8","children":[]}]}]},{"id":"d88cde681a7a","title":"死锁","parent":"8894ce5d6b10","children":[{"id":"9e55438b15c8","title":"原因","parent":"d88cde681a7a","children":[{"id":"254cd795681a","title":"竞争不可抢占资源","parent":"9e55438b15c8","children":[]},{"id":"f4c734f8a84a","title":"竞争可消耗资源","parent":"9e55438b15c8","children":[]}]},{"id":"922ef21d6d60","title":"预防死锁","parent":"d88cde681a7a","children":[{"id":"d723224741f1","title":"破坏“请求和保持条件”","children":[{"id":"5cd97fd85729","title":"第一种协议","children":[{"id":"b6a78a7d5221","title":"进程必须一次性申请所有资源","parent":"5cd97fd85729","children":[]}],"parent":"d723224741f1"},{"id":"4d5bee6856d4","title":"第二种协议","children":[{"id":"efa7c1aad1b2","title":"进程获得初期运行资源就可以运行，运行过程中逐步释放资源，再请求新资源","children":[],"parent":"4d5bee6856d4"}],"parent":"d723224741f1"}],"parent":"922ef21d6d60"},{"id":"f525cd6f5a20","title":"破坏不可抢占条件","parent":"922ef21d6d60","children":[{"id":"7f231df9903a","title":"当进程不能运行时，必须释放所持有的资源","parent":"f525cd6f5a20","children":[]}]}]},{"id":"bf640786ca93","title":"避免死锁","parent":"d88cde681a7a","children":[{"id":"94fda3563314","title":"安全状态","parent":"bf640786ca93","children":[{"id":"ee1c6bf452df","title":"进程能按照一定的序列顺利执行完","parent":"94fda3563314","children":[]}]},{"id":"16fab30889fd","title":"算法","parent":"bf640786ca93","children":[{"id":"98f04491bcc7","title":"银行家算法","parent":"16fab30889fd","children":[]}]}]}],"collapsed":false}]},{"id":"a558cc749bfd","title":"目标","parent":"9aafba07bba7","children":[{"id":"b421788be9c3","title":"提高CPU利用率","parent":"a558cc749bfd","children":[]},{"id":"979a15c8ce33","title":"CPU利用率=CPU有效工作时间/CPU有效工作时间+CPU等待时间","parent":"a558cc749bfd","children":[]}]}],"collapsed":false},{"id":"a4c585f3e97a","title":"虚拟存储器","parent":"root","children":[{"id":"486fa7e34077","title":"背景","children":[{"id":"85cffeac5d63","title":"有的作业很大，无法一次性装入内存","children":[],"parent":"486fa7e34077"},{"id":"1e6158585dd3","title":"有大量的作业要求运行，内存无法全部运行","children":[],"parent":"486fa7e34077"}],"parent":"a4c585f3e97a"},{"id":"3fea34b744d6","title":"原理","children":[{"id":"8c1ed815b166","title":"在较短的时间内，程序只执行一部分，只访问一段内存空间","children":[],"parent":"3fea34b744d6"},{"id":"32761194e2fa","title":"时间局部性","children":[{"id":"b731a13d5e3b","title":"被访问过的指令很可能不久之后会被再次访问","children":[],"parent":"32761194e2fa"}],"parent":"3fea34b744d6"},{"id":"2094ad526e21","title":"空间局部性","children":[{"id":"71891431e52e","title":"程序在一段时间里访问的地址很可能集中在一块","children":[],"parent":"2094ad526e21"}],"parent":"3fea34b744d6"}],"parent":"a4c585f3e97a"},{"id":"d0fd1a586beb","title":"请求分页存储管理方式","children":[{"id":"3d6a1c3d7c8a","title":"页面置换算法","children":[{"id":"92fcaa46348d","title":"最佳适应算法","children":[{"id":"4f663b7bbf74","title":"淘汰页是以后永不用的，或许是最长时间内不用访问的页面","children":[],"parent":"92fcaa46348d"},{"id":"0d7834423dff","title":"最理想的算法，无法实现","children":[],"parent":"92fcaa46348d"}],"parent":"3d6a1c3d7c8a"},{"id":"4253472d7509","title":"先进先出置换算法","children":[],"parent":"3d6a1c3d7c8a"},{"id":"a673977fa41e","title":"LRU置换算法","children":[{"id":"aa834e27dd39","title":"淘汰最久未使用的页面","children":[],"parent":"a673977fa41e"},{"id":"1ed17fb70f2e","title":"栈","children":[],"parent":"a673977fa41e"},{"id":"21bd88f0f7f1","title":"需要很多硬件支持","children":[],"parent":"a673977fa41e"}],"parent":"3d6a1c3d7c8a"},{"id":"08701fb6e452","title":"clock置换算法","children":[{"id":"db915b6276f5","title":"基本Clock置换算法","parent":"08701fb6e452","children":[{"id":"7bb10b76722e","title":"为每一页设定一个访问位，当被访问过时置为1","parent":"db915b6276f5","children":[]},{"id":"7c3e8ec3d32d","title":"第一次扫描，把访问位为0的页面换出去，把访问位为1的页面置为0","parent":"db915b6276f5","children":[]},{"id":"09b45bd51c0f","title":"如果第一次扫描没有把页面换出，那就进行第二次","children":[],"parent":"db915b6276f5"}]},{"id":"642bd0708e84","title":"改进的Clock置换算法","parent":"08701fb6e452","children":[]}],"parent":"3d6a1c3d7c8a"}],"parent":"d0fd1a586beb"}],"parent":"a4c585f3e97a"}],"collapsed":false},{"id":"3716f144647f","title":"文件管理","parent":"root","children":[{"id":"36c33d9823cc","title":"核心概念","children":[{"id":"7fcc7f42149e","title":"数据项","children":[{"id":"8c9e01257c39","title":"基本数据项","children":[{"id":"1f4761d5b0b6","title":"例如学号","children":[],"parent":"8c9e01257c39"}],"parent":"7fcc7f42149e"},{"id":"37ec2bab387c","title":"组合数据项","children":[{"id":"1ab11805f489","title":"例如工资包含基本工资、年龄等","children":[],"parent":"37ec2bab387c"}],"parent":"7fcc7f42149e"}],"parent":"36c33d9823cc"},{"id":"aba89cfa2b70","title":"记录","children":[{"id":"17c16d90fbed","title":"由数据项组成","children":[{"id":"f8f94f6f2d10","title":"比如一个人是多高、头发是怎么样的等，高度，头发颜色是数据项，一个人就是一个记录","children":[],"parent":"17c16d90fbed"}],"parent":"aba89cfa2b70"}],"parent":"36c33d9823cc"},{"id":"487d205d94b1","title":"文件","children":[{"id":"fc11a0e9fca7","title":"记录的集合","children":[],"parent":"487d205d94b1"},{"id":"63c1003f91d4","title":"逻辑结构","children":[{"id":"acd3df1fd453","title":"有无结构","children":[{"id":"f811c86debfe","title":"定长记录","children":[],"parent":"acd3df1fd453"},{"id":"0bc817e1d8c5","title":"变长记录","children":[],"parent":"acd3df1fd453"},{"id":"eae6dcacdff1","title":"无结构文件","children":[{"id":"747e8f5e33fc","title":"例如流式文件，文件长度是以字节为单位","children":[],"parent":"eae6dcacdff1"}],"parent":"acd3df1fd453"}],"parent":"63c1003f91d4"},{"id":"f8573f66a03f","title":"文件的组织结构","children":[{"id":"9a274598b55c","title":"顺序文件","children":[],"parent":"f8573f66a03f"},{"id":"dc64583362cb","title":"索引文件","children":[],"parent":"f8573f66a03f"},{"id":"8d377736ed92","title":"索引顺序文件","children":[{"id":"a82df718aa2f","title":"为一组文件设立一个索引","children":[],"parent":"8d377736ed92"}],"parent":"f8573f66a03f"}],"parent":"63c1003f91d4"}],"parent":"487d205d94b1"}],"parent":"36c33d9823cc"}],"parent":"3716f144647f"},{"id":"04b1480863c8","title":"文件目录管理","children":[{"id":"ebf09756b75d","title":"核心概念","children":[{"id":"54e22c46f524","title":"文件控制块（FCB）","children":[{"id":"5b86cb402c48","title":"记录文件的信息，比如权限等","children":[],"parent":"54e22c46f524"}],"parent":"ebf09756b75d"},{"id":"193561acd910","title":"索引结点","children":[{"id":"d46007db6c8a","title":"原因","children":[{"id":"1b41a5f0713e","title":"一般来说只要找到该文件才需要确定它的具体信息，比如存储的位置，所以文件目录不需要存储每个文件的具体信息，这样会减少文件目录的大小","children":[],"parent":"d46007db6c8a"}],"parent":"193561acd910"},{"id":"ef7c8c77fdda","title":"索引结点记录的是文件的具体信息，文件目录就变成了文件名+索引结点的集合","children":[],"parent":"193561acd910"}],"parent":"ebf09756b75d"}],"parent":"04b1480863c8"},{"id":"e2e86596ba5e","title":"类型","children":[{"id":"1f5ceb30d7b9","title":"单级文件目录","children":[],"parent":"e2e86596ba5e"},{"id":"3cefef834265","title":"两级文件目录","children":[],"parent":"e2e86596ba5e"},{"id":"3e2bc5d3608e","title":"树形结构目录","children":[],"parent":"e2e86596ba5e"}],"parent":"04b1480863c8"},{"id":"574e0185c4ac","title":"功能","children":[{"id":"6814bf70dcf4","title":"实现\"按名存取”","children":[],"parent":"574e0185c4ac"},{"id":"110d945e686d","title":"提高对目录的检索速度","children":[],"parent":"574e0185c4ac"}],"parent":"04b1480863c8"}],"parent":"3716f144647f"},{"id":"0d3d0dc0c094","title":"文件保护","children":[],"parent":"3716f144647f"},{"id":"5c64bc451b08","title":"文件共享","children":[],"parent":"3716f144647f"},{"id":"f43cfda2d841","title":"文件操作","children":[{"id":"81be7915fd48","title":"创建、删除、读、写文件","children":[],"parent":"f43cfda2d841"}],"parent":"3716f144647f"}]}]}},"meta":{"id":"5abae125e4b007d25121500b","member":"587a097ae4b098bf4ca2ed8f","exportTime":"2018-03-31 08:18:45","diagramInfo":{"category":"mind_free","title":"操作xit","created":"2018-03-28 08:26:13","creator":"587a097ae4b098bf4ca2ed8f","modified":"2018-03-31 08:15:39"},"type":"ProcessOn Schema File","version":"1.0"}}